@import url(settings/custom-cursor.css);
@import url(settings/custom-cursor.css);
@media (pointer: fine) {
  .parallax-container {
    height: 100vh;
    overflow-x: hidden;
    -webkit-perspective: 1px;
    perspective: 1px; } }

@media (pointer: fine) {
  .parallax-container {
    height: 100vh;
    overflow-x: hidden;
    -webkit-perspective: 1px;
    perspective: 1px; } }

:host {
  /*.transition.widthLeftToRight, .transition.widthLeftToRight.exit{
    width: 0;
    transition: width .5s $ease-out-cubic 0s;
  }
  .transition.widthLeftToRight.enter {
    width: 100%;
  }*/ }
  @media only screen and (max-width: 450px) and (min-width: 0px) {
    :host .transition.y-axis.enter.delay2, :host .transition.y-axis.enter.delay3, :host .transition.y-axis.enter.delay4, :host .transition.y-axis.enter.delay5, :host .transition.y-axis.enter.delay6, :host .transition.y-axis.enter.delay7, :host .transition.y-axis.enter.delay8 {
      transition-delay: 0.1s !important; } }
  :host .transition.y-axis.enter.delay1 {
    transition-delay: 0.1s; }
  :host .transition.y-axis.enter.delay2 {
    transition-delay: 0.2s; }
  :host .transition.y-axis.enter.delay3 {
    transition-delay: 0.3s; }
  :host .transition.y-axis.enter.delay4 {
    transition-delay: 0.4s; }
  :host .transition.y-axis.enter.delay5 {
    transition-delay: 0.5s; }
  :host .transition.y-axis.enter.delay6 {
    transition-delay: 0.6s; }
  :host .transition.y-axis.enter.delay7 {
    transition-delay: 0.7s; }
  :host .transition.y-axis.enter.delay8 {
    transition-delay: 0.8s; }
  :host .transition.y-axis {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.y-axis.enter {
    opacity: 1;
    transform: translate(0px, 0px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.y-axis.exit {
    opacity: 0;
    transform: translate(0px, -60px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.x-right, :host .transition.x-right.exit {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(-100px, 0px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.x-right.enter {
    opacity: 1;
    transform: translate(0px, 0px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.x-left, :host .transition.x-left.exit {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(100px, 0px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.x-left.enter {
    opacity: 1;
    transform: translate(0px, 0px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.opacity.enter.delay8 {
    transition-delay: 0.8s; }
  :host .transition.opacity, :host .transition.opacity.exit {
    will-change: transform, opacity;
    opacity: 0;
    transition: opacity 0.8s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }
    :host .transition.opacity:after, :host .transition.opacity.exit:after {
      transform: scaleY(1); }
  :host .transition.opacity.enter {
    opacity: 1;
    transition: opacity 2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }
    :host .transition.opacity.enter:after {
      transform: scaleY(1); }
  :host .transition.dividerWidthLeftToRight:after, :host .transition.dividerWidthLeftToRight.exit:after {
    will-change: transform, opacity;
    width: 0;
    transition: width 0.5s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }
  :host .transition.dividerWidthLeftToRight.enter:after {
    width: var(--column1); }
  :host .transition.dividerWidth:before, :host .transition.dividerWidth.exit:before {
    will-change: transform, opacity;
    width: 0;
    transition: width 2.5s cubic-bezier(0.165, 0.84, 0.44, 1) 0s; }
  :host .transition.dividerWidth.enter:before {
    width: 100%; }
  :host .transition.dividerTack, :host .transition.dividerTack.exit {
    width: 0;
    will-change: transform, opacity;
    transition: width 2.5s cubic-bezier(0.165, 0.84, 0.44, 1) 0s; }
  :host .transition.dividerTack.enter {
    width: 100%; }
  :host .transition.dividerTopToBottom, :host .transition.dividerTopToBottom.exit {
    will-change: transform, opacity;
    transition: all 1.2s cubic-bezier(0.16, 0, 0.55, 1);
    max-height: 0; }
  :host .transition.dividerTopToBottom.enter {
    max-height: 500px; }
  :host .transition.photoTransitionLeft, :host .transition.photoTransitionLeft.exit {
    clip: rect(0px, 0px, 1000px, 0px);
    opacity: 0;
    transition: clip 2.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) 0s; }
  :host .transition.photoTransitionLeft.enter {
    clip: rect(0px, 1250px, 1000px, 0px);
    opacity: 1;
    transition: clip 3s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 0.6s cubic-bezier(0.165, 0.84, 0.44, 1) 0s; }
  :host .transition.sectionTop {
    will-change: transform, opacity;
    opacity: 0.01;
    transform: translate(0, 100px);
    transition: opacity 1000ms cubic-bezier(0.25, 0.1, 0.25, 1), transform 1000ms cubic-bezier(0.25, 0.1, 0.25, 1); }
  :host .transition.sectionTop.enter {
    transform: translate(0, 0);
    opacity: 1; }
  :host .transition.sectionTop.exit {
    opacity: 0.01;
    transform: translate(0, -100px); }
  :host .transition.markersTransition img:nth-child(2), :host .transition.markersTransition.exit img:nth-child(2) {
    will-change: transform, opacity;
    opacity: 0;
    transition: opacity 1.6s cubic-bezier(0.25, 0.1, 0.25, 1) 0.5s; }
  :host .transition.markersTransition img:nth-child(1), :host .transition.markersTransition.exit img:nth-child(1) {
    opacity: 0;
    transition: opacity 1.2s cubic-bezier(0.25, 0.1, 0.25, 1) 1.5s; }
  :host .transition.markersTransition.enter img:nth-child(2) {
    opacity: 1; }
  :host .transition.markersTransition.enter img:nth-child(1) {
    opacity: 1; }
  :host .transition.compMapping img:nth-child(1) {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s;
    transition: all 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }
  :host .transition.compMapping img:nth-child(2) {
    opacity: 0;
    transition: opacity 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }
  :host .transition.compMapping.enter img:nth-child(1) {
    opacity: 1;
    transform: translate(0px, 0px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s;
    transition: all 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }
  :host .transition.compMapping.enter img:nth-child(2) {
    opacity: 1;
    transition: opacity 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }
  :host .transition.compMapping.exit img:nth-child(1) {
    opacity: 0;
    transform: translate(0px, -60px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s;
    transition: all 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }
  :host .transition.compMapping.exit img:nth-child(2) {
    opacity: 0;
    transition: opacity 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }
  :host .parallax-container .floating-shape .transition.trianglesLeft, :host .parallax-container .floating-shape .transition.trianglesLeft.exit {
    will-change: transform, opacity;
    transform: translateX(-100%) rotate(45deg);
    transition: transform 1s cubic-bezier(0.25, 0.1, 0.25, 1) 0.5s; }
  :host .parallax-container .floating-shape .transition.trianglesLeft.enter {
    transform: translateX(0) rotate(45deg); }
  :host .parallax-container .floating-shape .transition.trianglesRight, :host .parallax-container .floating-shape .transition.trianglesRight.exit {
    will-change: transform, opacity;
    transform: translateX(100%) rotate(45deg);
    transition: transform 1s cubic-bezier(0.25, 0.1, 0.25, 1) 0.5s; }
  :host .parallax-container .floating-shape .transition.trianglesRight.enter {
    transform: translateX(0) rotate(45deg); }
  :host .transition.popIn, :host .transition.popIn.exit {
    will-change: transform, opacity;
    opacity: 0;
    transform: scale(0.8) translate(0, 20px);
    transition: all 1.2s cubic-bezier(0.16, 0, 0.55, 1); }
  :host .transition.popIn.enter {
    opacity: 1;
    transform: scale(1) translate(0, 0); }
  :host [transitionComponentX2] {
    opacity: 0;
    transform: translateY(50px);
    transition-duration: 1.5s;
    transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
    transition-property: transform, opacity; }
  :host [transitionComponentX2][appear-1]:hover {
    transition-delay: .4s;
    transform: translateY(0);
    opacity: 1; }
  :host [transitionComponentX2][appear-2]:hover {
    transition-delay: .5s;
    transform: translateY(0);
    opacity: 1; }
  :host [transitionWawe] p:nth-child(1) {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 0.72s cubic-bezier(0, 0.52, 0.4, 1) 0s, opacity 0.6s cubic-bezier(0, 0.52, 0.4, 1) 0s; }
  :host [transitionWawe] p:nth-child(2) {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 0.72s cubic-bezier(0.1, 0.51, 0.53, 0.86) 0s, opacity 0.6s cubic-bezier(0.1, 0.51, 0.53, 0.86) 0s; }
  :host [transitionWawe] p:nth-child(3) {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 0.72s cubic-bezier(0.43, 0.46, 0.66, 0.66) 0s, opacity 0.6s cubic-bezier(0.43, 0.46, 0.66, 0.66) 0s; }
  :host [transitionWawe] p:nth-child(4) {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 0.72s cubic-bezier(0.42, 0.17, 0.87, 0.58) 0s, opacity 0.6s cubic-bezier(0.42, 0.17, 0.87, 0.58) 0s; }
  :host [transitionWawe] p:nth-child(5) {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 0.72s cubic-bezier(0.46, 0.02, 0.97, 0.5) 0s, opacity 0.6s cubic-bezier(0.46, 0.02, 0.97, 0.5) 0s; }
  :host [transitionWawe][appear]:hover p {
    opacity: 1;
    transform: translate(0, 0); }
  :host [photoNarrowing] {
    transform: scale(1.2) translate(0, 0);
    transition: transform 10s cubic-bezier(0.16, 0, 0.55, 1); }
  :host [photoNarrowing][appear]:hover {
    transform: scale(1) translate(0, -11%); }
  :host [photoAppearTopScale] {
    opacity: 0;
    transform: scale(0.8) translate(0, 50px);
    transition: transform 0.5s cubic-bezier(0.16, 0, 0.55, 1), opacity 0.5s cubic-bezier(0.16, 0, 0.55, 1); }
  :host [photoAppearTopScale][appear]:hover {
    opacity: 1;
    transform: scale(1) translate(0, 0); }
  @media only screen and (max-width: 450px) and (min-width: 0px) {
    :host .transition.photoTransitionLeft, :host .transition.x-right, :host .transition.x-left {
      will-change: transform, opacity;
      opacity: 0;
      transform: translate(0px, 60px);
      transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
    :host .transition.photoTransitionLeft.enter, :host .transition.x-right.enter, :host .transition.x-left.enter {
      opacity: 1;
      transform: translate(0px, 0px);
      transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
    :host .transition.photoTransitionLeft.exit, :host .transition.x-right.exit, :host .transition.x-left.exit {
      opacity: 0;
      transform: translate(0px, -60px);
      transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; } }

:host([scrollingTop]) .transition.y-axis {
  will-change: transform, opacity;
  opacity: 0;
  transform: translate(0px, -60px);
  transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }

:host([scrollingTop]) .transition.y-axis.enter {
  opacity: 1;
  transform: translate(0px, 0px);
  transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }

:host([scrollingTop]) .transition.y-axis.exit {
  opacity: 0;
  transform: translate(0px, 60px);
  transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }

:host([scrollingTop]) .transition.sectionTop {
  will-change: transform, opacity;
  opacity: 0.01;
  transform: translate(0, -100px);
  transition: opacity 1000ms cubic-bezier(0.25, 0.1, 0.25, 1), transform 1000ms cubic-bezier(0.25, 0.1, 0.25, 1); }

:host([scrollingTop]) .transition.sectionTop.enter {
  transform: translate(0, 0);
  opacity: 1; }

:host([scrollingTop]) .transition.sectionTop.exit {
  opacity: 0.01;
  transform: translate(0, 100px); }

:host([scrollingTop]) .transition.compMapping img:nth-child(1) {
  will-change: transform, opacity;
  opacity: 0;
  transform: translate(0px, -60px);
  transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s;
  transition: all 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }

:host([scrollingTop]) .transition.compMapping img:nth-child(2) {
  opacity: 0;
  transition: opacity 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }

:host([scrollingTop]) .transition.compMapping.enter img:nth-child(1) {
  opacity: 1;
  transform: translate(0px, 0px);
  transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s;
  transition: all 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }

:host([scrollingTop]) .transition.compMapping.enter img:nth-child(2) {
  opacity: 1;
  transition: opacity 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }

:host([scrollingTop]) .transition.compMapping.exit img:nth-child(1) {
  opacity: 0;
  transform: translate(0px, 60px);
  transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s;
  transition: all 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }

:host([scrollingTop]) .transition.compMapping.exit img:nth-child(2) {
  opacity: 0;
  transition: opacity 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }

/*--colors--*/
/*--opacity--*/
/*--D--*/
/*--A--*/
/*--B--*/
/*--Error--*/
@media (pointer: fine) {
  .parallax-container {
    height: 100vh;
    overflow-x: hidden;
    -webkit-perspective: 1px;
    perspective: 1px; } }

/*--colors--*/
/*--opacity--*/
/*--D--*/
/*--A--*/
/*--B--*/
/*--Error--*/
/*--colors--*/
/*--opacity--*/
/*--D--*/
/*--A--*/
/*--B--*/
/*--Error--*/
@media (pointer: fine) {
  .parallax-container {
    height: 100vh;
    overflow-x: hidden;
    -webkit-perspective: 1px;
    perspective: 1px; } }

/*@function clean-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function font-space($font-size, $leading) {
  $text-body-height:72;
  $top-space-big-font:10;
  $top-space-small-font:5;

  $text-size-base: 100; //Default Size For mesurment
  $letter-height-base: $text-body-height;
  $line-height-base: 100; //Default Size For mesurment
  $top-space: if($font-size <= 18, $top-space-small-font, $top-space-big-font);
  $white-space-base-px: $line-height-base - $letter-height-base;

  $letter-size-px: round(clean-unit($font-size) / $text-size-base * $letter-height-base); //px
  $one-pers-lh: $leading / 100; //%
  $white-space: 100 - $letter-size-px / $one-pers-lh;
  $white-space-one-pers: ($white-space * $one-pers-lh) / 100; // 1%
  $t: $top-space / ($white-space-base-px / 100);
  $b: ($white-space-base-px - $top-space) / ($white-space-base-px / 100);
  $space-top-px: round($t * $white-space-one-pers);
  $space-bottom-px: round($b * $white-space-one-pers);

  $result-top: ($space-top-px + $letter-size-px) * 1px;
  @while ($result-top % clean-unit(var(--subdiv)) != 0) {
    $result-top: $result-top + 1
  }

  $result-bottom: $space-bottom-px * 1px;
  @while ($result-bottom % clean-unit(var(--subdiv)) != 0) {
    $result-bottom: $result-bottom + 1
  }

  @return $result-top - ($space-top-px + $letter-size-px) 0px ($result-bottom - $space-bottom-px) 0px;

}*/
/*@function line-height($f-size, $Leading) {
  @return round(($f-size * $Leading)/$subdiv)*$subdiv;
}*/
/*@function clean-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function font-space($font-size, $leading) {
  $text-body-height:72;
  $top-space-big-font:10;
  $top-space-small-font:5;

  $text-size-base: 100; //Default Size For mesurment
  $letter-height-base: $text-body-height;
  $line-height-base: 100; //Default Size For mesurment
  $top-space: if($font-size <= 18, $top-space-small-font, $top-space-big-font);
  $white-space-base-px: $line-height-base - $letter-height-base;

  $letter-size-px: round(clean-unit($font-size) / $text-size-base * $letter-height-base); //px
  $one-pers-lh: $leading / 100; //%
  $white-space: 100 - $letter-size-px / $one-pers-lh;
  $white-space-one-pers: ($white-space * $one-pers-lh) / 100; // 1%
  $t: $top-space / ($white-space-base-px / 100);
  $b: ($white-space-base-px - $top-space) / ($white-space-base-px / 100);
  $space-top-px: round($t * $white-space-one-pers);
  $space-bottom-px: round($b * $white-space-one-pers);

  $result-top: ($space-top-px + $letter-size-px) * 1px;
  @while ($result-top % clean-unit(var(--subdiv)) != 0) {
    $result-top: $result-top + 1
  }

  $result-bottom: $space-bottom-px * 1px;
  @while ($result-bottom % clean-unit(var(--subdiv)) != 0) {
    $result-bottom: $result-bottom + 1
  }

  @return $result-top - ($space-top-px + $letter-size-px) 0px ($result-bottom - $space-bottom-px) 0px;

}*/
/*@function line-height($f-size, $Leading) {
  @return round(($f-size * $Leading)/$subdiv)*$subdiv;
}*/
/*--colors--*/
/*--opacity--*/
/*--D--*/
/*--A--*/
/*--B--*/
/*--Error--*/
.title1 {
  font: 300 var(--font-size8)/1.2 lato, sans-serif, open-sans;
  letter-spacing: 0.053em;
  text-transform: none;
  margin-bottom: calc(var(--subdiv) * 7);
  text-align: center; }

.cta-text {
  font: 300 var(--font-size2)/1.2 lato, sans-serif, open-sans;
  letter-spacing: 0.25em;
  text-transform: uppercase; }

.title2, h3, [tip]:before {
  font: 300 var(--font-size2)/1.25 Lato, sans-serif, open-sans;
  letter-spacing: 0.33em;
  text-transform: uppercase;
  margin-bottom: calc(var(--subdiv) * 4); }

.title3 {
  font: 300 var(--font-size7)/1.5 Lato, sans-serif, open-sans;
  letter-spacing: 0.03em;
  text-transform: none;
  margin-bottom: var(--baseline); }

.title4 {
  font: 300 var(--font-size5)/1.4 Lato, sans-serif, open-sans;
  letter-spacing: 0.03em;
  text-transform: none;
  margin-bottom: calc(var(--subdiv) * 7); }

.subtitle1 {
  font: 300 var(--font-size2)/1.8 Lato, sans-serif, open-sans;
  letter-spacing: 0.21em;
  text-transform: uppercase;
  color: #fff;
  text-align: center;
  margin-bottom: 0; }

.subtitle2 {
  font: 300 var(--font-size4)/1.6 lato, sans-serif, open-sans;
  letter-spacing: 0em;
  text-transform: none; }

p {
  font: 300 var(--font-size3)/1.66 Lato, sans-serif, open-sans;
  letter-spacing: 0.02em;
  text-transform: none;
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: auto;
  hyphens: auto;
  -webkit-hyphens: auto; }

p.emph-text {
  font: 300 var(--font-size5)/1.6 lato, sans-serif, open-sans;
  letter-spacing: 0em;
  text-transform: none;
  margin-bottom: calc(var(--baseline) * 2); }
  p.emph-text b {
    font: 500 var(--font-size5)/1.6 lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none; }

h3 {
  margin-bottom: var(--spacer2);
  text-align: center; }

@media only screen and (max-width: 450px) and (min-width: 0px) {
  .subtitle1 {
    font: 300 var(--font-size2)/1.8 Lato, sans-serif, open-sans;
    letter-spacing: 0.21em;
    text-transform: uppercase; }
  .subtitle2 {
    font: 300 var(--font-size3)/1.66 lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none;
    text-align: left; }
  p {
    font: 300 var(--font-size3)/1.5 Lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none; }
  p.emph-text {
    font: 300 var(--font-size3)/1.6 Lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none; }
    p.emph-text b {
      font: 400 var(--font-size3)/1.6 Lato, sans-serif, open-sans;
      letter-spacing: 0em;
      text-transform: none; }
  .title1 {
    font: 300 var(--font-size6)/1.25 Lato, sans-serif, open-sans;
    letter-spacing: 0.02em;
    text-transform: none;
    margin-bottom: calc(var(--subdiv) * 2);
    text-align: center !important; }
  .title2, h3, [tip]:before {
    font: 300 var(--font-size1)/1.25 Lato, sans-serif, open-sans;
    letter-spacing: 0.63em;
    text-transform: uppercase;
    text-align: center; }
  .title3 {
    font: 300 var(--font-size6)/1.5 Lato, sans-serif, open-sans;
    letter-spacing: 0.03em;
    text-transform: none;
    margin-bottom: var(--baseline); }
  .title4 {
    font: 400 var(--font-size4)/1.4 Lato, sans-serif, open-sans;
    letter-spacing: 0.03em;
    text-transform: none;
    margin-bottom: calc(var(--subdiv) * 6); } }

:host {
  display: block;
  position: relative;
  font-smoothing: antialiased;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }
  :host nav-link {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    -webkit-tap-highlight-color: transparent; }
  :host :hover, :host :focus, :host :active {
    outline: none;
    text-decoration: none;
    border-style: none; }
  :host img {
    box-sizing: border-box; }
  :host ::-webkit-input-placeholder {
    color: #a1a0a2; }
  :host ::-moz-placeholder {
    color: #a1a0a2; }
  :host :-ms-input-placeholder {
    color: #a1a0a2; }
  :host :-moz-placeholder {
    color: #a1a0a2; }
  :host ul {
    padding: 0; }
  :host input, :host textarea, :host fieldset {
    border: 0;
    outline: none;
    resize: none;
    -ms-overflow-style: none; }
  :host a, :host b, :host p, :host h1, :host h2, :host h3, :host h4, :host h5, :host h6, :host ul, :host span, :host nav-link {
    cursor: auto;
    color: #131116;
    text-rendering: optimizeLegibility; }
  :host a, :host li, :host span {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }
  :host img {
    -webkit-touch-callout: none;
    /* iOS Safari */
    -webkit-user-select: none;
    /* Safari */
    -khtml-user-select: none;
    /* Konqueror HTML */
    -moz-user-select: none;
    /* Firefox */
    -ms-user-select: none;
    /* Internet Explorer/Edge */
    user-select: none;
    /* Non-prefixed version, currently                               supported by Chrome and Opera */ }
  :host a, :host a:visited, :host a:focus, :host a:active, :host a:hover {
    text-decoration: none;
    cursor: pointer; }
  :host li {
    list-style-type: none; }

[tip] {
  position: relative; }

[tip]:before {
  content: attr(data-description);
  visibility: hidden;
  background: transparent;
  color: #fff;
  z-index: 99;
  white-space: pre;
  line-height: 25px;
  border-radius: 0;
  opacity: 0;
  transition: 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
  padding: 5.4px;
  position: absolute;
  text-transform: uppercase; }

[tip]:hover:before {
  opacity: 1;
  visibility: visible;
  transition: 0.3s cubic-bezier(0.645, 0.045, 0.355, 1) 0.3s; }

[tip=top]:before, [tip]:before {
  top: -17px;
  left: 50%;
  transform: translate(-50%, -100%); }

[tip=bottom]:before {
  bottom: -17px;
  left: 50%;
  top: unset;
  transform: translate(-50%, 100%); }

[tip=left]:before {
  top: 50%;
  left: -17px;
  transform: translate(-100%, -50%); }

[tip=right]:before {
  right: -17px;
  left: unset;
  top: 50%;
  transform: translate(100%, -50%); }

[tip]:after {
  content: '';
  visibility: hidden;
  position: absolute;
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-top: 6px solid transparent;
  margin-left: -6px;
  height: 0;
  width: 0;
  transition: 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
  opacity: 0; }

[tip]:hover:after {
  opacity: 1;
  visibility: visible;
  transition: 0.3s cubic-bezier(0.645, 0.045, 0.355, 1) 0.3s; }

[tip=top]:after, [tip]:after {
  top: -17px;
  left: 50%;
  transform: translate(0, 0); }

[tip=left]:after {
  top: 50%;
  left: -17px;
  transform: rotate(-90deg) translate(25%, 3px); }

[tip=right]:after {
  left: unset;
  right: -17px;
  top: 50%;
  transform: rotate(90deg) translate(-25%, -4px); }

[tip=bottom]:after {
  top: unset;
  bottom: -17px;
  left: 50%;
  transform: rotate(180deg) translate(0, 0); }

[data-description=""]:hover:after, [data-description=""]:hover:before {
  visibility: hidden; }

/*@function clean-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function font-space($font-size, $leading) {
  $text-body-height:72;
  $top-space-big-font:10;
  $top-space-small-font:5;

  $text-size-base: 100; //Default Size For mesurment
  $letter-height-base: $text-body-height;
  $line-height-base: 100; //Default Size For mesurment
  $top-space: if($font-size <= 18, $top-space-small-font, $top-space-big-font);
  $white-space-base-px: $line-height-base - $letter-height-base;

  $letter-size-px: round(clean-unit($font-size) / $text-size-base * $letter-height-base); //px
  $one-pers-lh: $leading / 100; //%
  $white-space: 100 - $letter-size-px / $one-pers-lh;
  $white-space-one-pers: ($white-space * $one-pers-lh) / 100; // 1%
  $t: $top-space / ($white-space-base-px / 100);
  $b: ($white-space-base-px - $top-space) / ($white-space-base-px / 100);
  $space-top-px: round($t * $white-space-one-pers);
  $space-bottom-px: round($b * $white-space-one-pers);

  $result-top: ($space-top-px + $letter-size-px) * 1px;
  @while ($result-top % clean-unit(var(--subdiv)) != 0) {
    $result-top: $result-top + 1
  }

  $result-bottom: $space-bottom-px * 1px;
  @while ($result-bottom % clean-unit(var(--subdiv)) != 0) {
    $result-bottom: $result-bottom + 1
  }

  @return $result-top - ($space-top-px + $letter-size-px) 0px ($result-bottom - $space-bottom-px) 0px;

}*/
/*@function line-height($f-size, $Leading) {
  @return round(($f-size * $Leading)/$subdiv)*$subdiv;
}*/
/*@function clean-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function font-space($font-size, $leading) {
  $text-body-height:72;
  $top-space-big-font:10;
  $top-space-small-font:5;

  $text-size-base: 100; //Default Size For mesurment
  $letter-height-base: $text-body-height;
  $line-height-base: 100; //Default Size For mesurment
  $top-space: if($font-size <= 18, $top-space-small-font, $top-space-big-font);
  $white-space-base-px: $line-height-base - $letter-height-base;

  $letter-size-px: round(clean-unit($font-size) / $text-size-base * $letter-height-base); //px
  $one-pers-lh: $leading / 100; //%
  $white-space: 100 - $letter-size-px / $one-pers-lh;
  $white-space-one-pers: ($white-space * $one-pers-lh) / 100; // 1%
  $t: $top-space / ($white-space-base-px / 100);
  $b: ($white-space-base-px - $top-space) / ($white-space-base-px / 100);
  $space-top-px: round($t * $white-space-one-pers);
  $space-bottom-px: round($b * $white-space-one-pers);

  $result-top: ($space-top-px + $letter-size-px) * 1px;
  @while ($result-top % clean-unit(var(--subdiv)) != 0) {
    $result-top: $result-top + 1
  }

  $result-bottom: $space-bottom-px * 1px;
  @while ($result-bottom % clean-unit(var(--subdiv)) != 0) {
    $result-bottom: $result-bottom + 1
  }

  @return $result-top - ($space-top-px + $letter-size-px) 0px ($result-bottom - $space-bottom-px) 0px;

}*/
/*@function line-height($f-size, $Leading) {
  @return round(($f-size * $Leading)/$subdiv)*$subdiv;
}*/
/*@function clean-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function font-space($font-size, $leading) {
  $text-body-height:72;
  $top-space-big-font:10;
  $top-space-small-font:5;

  $text-size-base: 100; //Default Size For mesurment
  $letter-height-base: $text-body-height;
  $line-height-base: 100; //Default Size For mesurment
  $top-space: if($font-size <= 18, $top-space-small-font, $top-space-big-font);
  $white-space-base-px: $line-height-base - $letter-height-base;

  $letter-size-px: round(clean-unit($font-size) / $text-size-base * $letter-height-base); //px
  $one-pers-lh: $leading / 100; //%
  $white-space: 100 - $letter-size-px / $one-pers-lh;
  $white-space-one-pers: ($white-space * $one-pers-lh) / 100; // 1%
  $t: $top-space / ($white-space-base-px / 100);
  $b: ($white-space-base-px - $top-space) / ($white-space-base-px / 100);
  $space-top-px: round($t * $white-space-one-pers);
  $space-bottom-px: round($b * $white-space-one-pers);

  $result-top: ($space-top-px + $letter-size-px) * 1px;
  @while ($result-top % clean-unit(var(--subdiv)) != 0) {
    $result-top: $result-top + 1
  }

  $result-bottom: $space-bottom-px * 1px;
  @while ($result-bottom % clean-unit(var(--subdiv)) != 0) {
    $result-bottom: $result-bottom + 1
  }

  @return $result-top - ($space-top-px + $letter-size-px) 0px ($result-bottom - $space-bottom-px) 0px;

}*/
/*@function line-height($f-size, $Leading) {
  @return round(($f-size * $Leading)/$subdiv)*$subdiv;
}*/
/*--colors--*/
/*--opacity--*/
/*--D--*/
/*--A--*/
/*--B--*/
/*--Error--*/
.title1 {
  font: 300 var(--font-size8)/1.2 lato, sans-serif, open-sans;
  letter-spacing: 0.053em;
  text-transform: none;
  margin-bottom: calc(var(--subdiv) * 7);
  text-align: center; }

.cta-text {
  font: 300 var(--font-size2)/1.2 lato, sans-serif, open-sans;
  letter-spacing: 0.25em;
  text-transform: uppercase; }

.title2, h3, [tip]:before {
  font: 300 var(--font-size2)/1.25 Lato, sans-serif, open-sans;
  letter-spacing: 0.33em;
  text-transform: uppercase;
  margin-bottom: calc(var(--subdiv) * 4); }

.title3 {
  font: 300 var(--font-size7)/1.5 Lato, sans-serif, open-sans;
  letter-spacing: 0.03em;
  text-transform: none;
  margin-bottom: var(--baseline); }

.title4 {
  font: 300 var(--font-size5)/1.4 Lato, sans-serif, open-sans;
  letter-spacing: 0.03em;
  text-transform: none;
  margin-bottom: calc(var(--subdiv) * 7); }

.subtitle1 {
  font: 300 var(--font-size2)/1.8 Lato, sans-serif, open-sans;
  letter-spacing: 0.21em;
  text-transform: uppercase;
  color: #fff;
  text-align: center;
  margin-bottom: 0; }

.subtitle2 {
  font: 300 var(--font-size4)/1.6 lato, sans-serif, open-sans;
  letter-spacing: 0em;
  text-transform: none; }

p {
  font: 300 var(--font-size3)/1.66 Lato, sans-serif, open-sans;
  letter-spacing: 0.02em;
  text-transform: none;
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: auto;
  hyphens: auto;
  -webkit-hyphens: auto; }

p.emph-text {
  font: 300 var(--font-size5)/1.6 lato, sans-serif, open-sans;
  letter-spacing: 0em;
  text-transform: none;
  margin-bottom: calc(var(--baseline) * 2); }
  p.emph-text b {
    font: 500 var(--font-size5)/1.6 lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none; }

h3 {
  margin-bottom: var(--spacer2);
  text-align: center; }

@media only screen and (max-width: 450px) and (min-width: 0px) {
  .subtitle1 {
    font: 300 var(--font-size2)/1.8 Lato, sans-serif, open-sans;
    letter-spacing: 0.21em;
    text-transform: uppercase; }
  .subtitle2 {
    font: 300 var(--font-size3)/1.66 lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none;
    text-align: left; }
  p {
    font: 300 var(--font-size3)/1.5 Lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none; }
  p.emph-text {
    font: 300 var(--font-size3)/1.6 Lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none; }
    p.emph-text b {
      font: 400 var(--font-size3)/1.6 Lato, sans-serif, open-sans;
      letter-spacing: 0em;
      text-transform: none; }
  .title1 {
    font: 300 var(--font-size6)/1.25 Lato, sans-serif, open-sans;
    letter-spacing: 0.02em;
    text-transform: none;
    margin-bottom: calc(var(--subdiv) * 2);
    text-align: center !important; }
  .title2, h3, [tip]:before {
    font: 300 var(--font-size1)/1.25 Lato, sans-serif, open-sans;
    letter-spacing: 0.63em;
    text-transform: uppercase;
    text-align: center; }
  .title3 {
    font: 300 var(--font-size6)/1.5 Lato, sans-serif, open-sans;
    letter-spacing: 0.03em;
    text-transform: none;
    margin-bottom: var(--baseline); }
  .title4 {
    font: 400 var(--font-size4)/1.4 Lato, sans-serif, open-sans;
    letter-spacing: 0.03em;
    text-transform: none;
    margin-bottom: calc(var(--subdiv) * 6); } }

@media (pointer: fine) {
  .parallax-container {
    height: 100vh;
    overflow-x: hidden;
    -webkit-perspective: 1px;
    perspective: 1px; } }

@media (pointer: fine) {
  .parallax-container {
    height: 100vh;
    overflow-x: hidden;
    -webkit-perspective: 1px;
    perspective: 1px; } }

:host {
  /*.transition.widthLeftToRight, .transition.widthLeftToRight.exit{
    width: 0;
    transition: width .5s $ease-out-cubic 0s;
  }
  .transition.widthLeftToRight.enter {
    width: 100%;
  }*/ }
  @media only screen and (max-width: 450px) and (min-width: 0px) {
    :host .transition.y-axis.enter.delay2, :host .transition.y-axis.enter.delay3, :host .transition.y-axis.enter.delay4, :host .transition.y-axis.enter.delay5, :host .transition.y-axis.enter.delay6, :host .transition.y-axis.enter.delay7, :host .transition.y-axis.enter.delay8 {
      transition-delay: 0.1s !important; } }
  :host .transition.y-axis.enter.delay1 {
    transition-delay: 0.1s; }
  :host .transition.y-axis.enter.delay2 {
    transition-delay: 0.2s; }
  :host .transition.y-axis.enter.delay3 {
    transition-delay: 0.3s; }
  :host .transition.y-axis.enter.delay4 {
    transition-delay: 0.4s; }
  :host .transition.y-axis.enter.delay5 {
    transition-delay: 0.5s; }
  :host .transition.y-axis.enter.delay6 {
    transition-delay: 0.6s; }
  :host .transition.y-axis.enter.delay7 {
    transition-delay: 0.7s; }
  :host .transition.y-axis.enter.delay8 {
    transition-delay: 0.8s; }
  :host .transition.y-axis {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.y-axis.enter {
    opacity: 1;
    transform: translate(0px, 0px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.y-axis.exit {
    opacity: 0;
    transform: translate(0px, -60px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.x-right, :host .transition.x-right.exit {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(-100px, 0px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.x-right.enter {
    opacity: 1;
    transform: translate(0px, 0px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.x-left, :host .transition.x-left.exit {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(100px, 0px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.x-left.enter {
    opacity: 1;
    transform: translate(0px, 0px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
  :host .transition.opacity.enter.delay8 {
    transition-delay: 0.8s; }
  :host .transition.opacity, :host .transition.opacity.exit {
    will-change: transform, opacity;
    opacity: 0;
    transition: opacity 0.8s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }
    :host .transition.opacity:after, :host .transition.opacity.exit:after {
      transform: scaleY(1); }
  :host .transition.opacity.enter {
    opacity: 1;
    transition: opacity 2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }
    :host .transition.opacity.enter:after {
      transform: scaleY(1); }
  :host .transition.dividerWidthLeftToRight:after, :host .transition.dividerWidthLeftToRight.exit:after {
    will-change: transform, opacity;
    width: 0;
    transition: width 0.5s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }
  :host .transition.dividerWidthLeftToRight.enter:after {
    width: var(--column1); }
  :host .transition.dividerWidth:before, :host .transition.dividerWidth.exit:before {
    will-change: transform, opacity;
    width: 0;
    transition: width 2.5s cubic-bezier(0.165, 0.84, 0.44, 1) 0s; }
  :host .transition.dividerWidth.enter:before {
    width: 100%; }
  :host .transition.dividerTack, :host .transition.dividerTack.exit {
    width: 0;
    will-change: transform, opacity;
    transition: width 2.5s cubic-bezier(0.165, 0.84, 0.44, 1) 0s; }
  :host .transition.dividerTack.enter {
    width: 100%; }
  :host .transition.dividerTopToBottom, :host .transition.dividerTopToBottom.exit {
    will-change: transform, opacity;
    transition: all 1.2s cubic-bezier(0.16, 0, 0.55, 1);
    max-height: 0; }
  :host .transition.dividerTopToBottom.enter {
    max-height: 500px; }
  :host .transition.photoTransitionLeft, :host .transition.photoTransitionLeft.exit {
    clip: rect(0px, 0px, 1000px, 0px);
    opacity: 0;
    transition: clip 2.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) 0s; }
  :host .transition.photoTransitionLeft.enter {
    clip: rect(0px, 1250px, 1000px, 0px);
    opacity: 1;
    transition: clip 3s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 0.6s cubic-bezier(0.165, 0.84, 0.44, 1) 0s; }
  :host .transition.sectionTop {
    will-change: transform, opacity;
    opacity: 0.01;
    transform: translate(0, 100px);
    transition: opacity 1000ms cubic-bezier(0.25, 0.1, 0.25, 1), transform 1000ms cubic-bezier(0.25, 0.1, 0.25, 1); }
  :host .transition.sectionTop.enter {
    transform: translate(0, 0);
    opacity: 1; }
  :host .transition.sectionTop.exit {
    opacity: 0.01;
    transform: translate(0, -100px); }
  :host .transition.markersTransition img:nth-child(2), :host .transition.markersTransition.exit img:nth-child(2) {
    will-change: transform, opacity;
    opacity: 0;
    transition: opacity 1.6s cubic-bezier(0.25, 0.1, 0.25, 1) 0.5s; }
  :host .transition.markersTransition img:nth-child(1), :host .transition.markersTransition.exit img:nth-child(1) {
    opacity: 0;
    transition: opacity 1.2s cubic-bezier(0.25, 0.1, 0.25, 1) 1.5s; }
  :host .transition.markersTransition.enter img:nth-child(2) {
    opacity: 1; }
  :host .transition.markersTransition.enter img:nth-child(1) {
    opacity: 1; }
  :host .transition.compMapping img:nth-child(1) {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s;
    transition: all 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }
  :host .transition.compMapping img:nth-child(2) {
    opacity: 0;
    transition: opacity 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }
  :host .transition.compMapping.enter img:nth-child(1) {
    opacity: 1;
    transform: translate(0px, 0px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s;
    transition: all 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }
  :host .transition.compMapping.enter img:nth-child(2) {
    opacity: 1;
    transition: opacity 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }
  :host .transition.compMapping.exit img:nth-child(1) {
    opacity: 0;
    transform: translate(0px, -60px);
    transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s;
    transition: all 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }
  :host .transition.compMapping.exit img:nth-child(2) {
    opacity: 0;
    transition: opacity 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }
  :host .parallax-container .floating-shape .transition.trianglesLeft, :host .parallax-container .floating-shape .transition.trianglesLeft.exit {
    will-change: transform, opacity;
    transform: translateX(-100%) rotate(45deg);
    transition: transform 1s cubic-bezier(0.25, 0.1, 0.25, 1) 0.5s; }
  :host .parallax-container .floating-shape .transition.trianglesLeft.enter {
    transform: translateX(0) rotate(45deg); }
  :host .parallax-container .floating-shape .transition.trianglesRight, :host .parallax-container .floating-shape .transition.trianglesRight.exit {
    will-change: transform, opacity;
    transform: translateX(100%) rotate(45deg);
    transition: transform 1s cubic-bezier(0.25, 0.1, 0.25, 1) 0.5s; }
  :host .parallax-container .floating-shape .transition.trianglesRight.enter {
    transform: translateX(0) rotate(45deg); }
  :host .transition.popIn, :host .transition.popIn.exit {
    will-change: transform, opacity;
    opacity: 0;
    transform: scale(0.8) translate(0, 20px);
    transition: all 1.2s cubic-bezier(0.16, 0, 0.55, 1); }
  :host .transition.popIn.enter {
    opacity: 1;
    transform: scale(1) translate(0, 0); }
  :host [transitionComponentX2] {
    opacity: 0;
    transform: translateY(50px);
    transition-duration: 1.5s;
    transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
    transition-property: transform, opacity; }
  :host [transitionComponentX2][appear-1]:hover {
    transition-delay: .4s;
    transform: translateY(0);
    opacity: 1; }
  :host [transitionComponentX2][appear-2]:hover {
    transition-delay: .5s;
    transform: translateY(0);
    opacity: 1; }
  :host [transitionWawe] p:nth-child(1) {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 0.72s cubic-bezier(0, 0.52, 0.4, 1) 0s, opacity 0.6s cubic-bezier(0, 0.52, 0.4, 1) 0s; }
  :host [transitionWawe] p:nth-child(2) {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 0.72s cubic-bezier(0.1, 0.51, 0.53, 0.86) 0s, opacity 0.6s cubic-bezier(0.1, 0.51, 0.53, 0.86) 0s; }
  :host [transitionWawe] p:nth-child(3) {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 0.72s cubic-bezier(0.43, 0.46, 0.66, 0.66) 0s, opacity 0.6s cubic-bezier(0.43, 0.46, 0.66, 0.66) 0s; }
  :host [transitionWawe] p:nth-child(4) {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 0.72s cubic-bezier(0.42, 0.17, 0.87, 0.58) 0s, opacity 0.6s cubic-bezier(0.42, 0.17, 0.87, 0.58) 0s; }
  :host [transitionWawe] p:nth-child(5) {
    will-change: transform, opacity;
    opacity: 0;
    transform: translate(0px, 60px);
    transition: transform 0.72s cubic-bezier(0.46, 0.02, 0.97, 0.5) 0s, opacity 0.6s cubic-bezier(0.46, 0.02, 0.97, 0.5) 0s; }
  :host [transitionWawe][appear]:hover p {
    opacity: 1;
    transform: translate(0, 0); }
  :host [photoNarrowing] {
    transform: scale(1.2) translate(0, 0);
    transition: transform 10s cubic-bezier(0.16, 0, 0.55, 1); }
  :host [photoNarrowing][appear]:hover {
    transform: scale(1) translate(0, -11%); }
  :host [photoAppearTopScale] {
    opacity: 0;
    transform: scale(0.8) translate(0, 50px);
    transition: transform 0.5s cubic-bezier(0.16, 0, 0.55, 1), opacity 0.5s cubic-bezier(0.16, 0, 0.55, 1); }
  :host [photoAppearTopScale][appear]:hover {
    opacity: 1;
    transform: scale(1) translate(0, 0); }
  @media only screen and (max-width: 450px) and (min-width: 0px) {
    :host .transition.photoTransitionLeft, :host .transition.x-right, :host .transition.x-left {
      will-change: transform, opacity;
      opacity: 0;
      transform: translate(0px, 60px);
      transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
    :host .transition.photoTransitionLeft.enter, :host .transition.x-right.enter, :host .transition.x-left.enter {
      opacity: 1;
      transform: translate(0px, 0px);
      transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }
    :host .transition.photoTransitionLeft.exit, :host .transition.x-right.exit, :host .transition.x-left.exit {
      opacity: 0;
      transform: translate(0px, -60px);
      transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; } }

:host([scrollingTop]) .transition.y-axis {
  will-change: transform, opacity;
  opacity: 0;
  transform: translate(0px, -60px);
  transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }

:host([scrollingTop]) .transition.y-axis.enter {
  opacity: 1;
  transform: translate(0px, 0px);
  transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }

:host([scrollingTop]) .transition.y-axis.exit {
  opacity: 0;
  transform: translate(0px, 60px);
  transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s; }

:host([scrollingTop]) .transition.sectionTop {
  will-change: transform, opacity;
  opacity: 0.01;
  transform: translate(0, -100px);
  transition: opacity 1000ms cubic-bezier(0.25, 0.1, 0.25, 1), transform 1000ms cubic-bezier(0.25, 0.1, 0.25, 1); }

:host([scrollingTop]) .transition.sectionTop.enter {
  transform: translate(0, 0);
  opacity: 1; }

:host([scrollingTop]) .transition.sectionTop.exit {
  opacity: 0.01;
  transform: translate(0, 100px); }

:host([scrollingTop]) .transition.compMapping img:nth-child(1) {
  will-change: transform, opacity;
  opacity: 0;
  transform: translate(0px, -60px);
  transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s;
  transition: all 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }

:host([scrollingTop]) .transition.compMapping img:nth-child(2) {
  opacity: 0;
  transition: opacity 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }

:host([scrollingTop]) .transition.compMapping.enter img:nth-child(1) {
  opacity: 1;
  transform: translate(0px, 0px);
  transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s;
  transition: all 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }

:host([scrollingTop]) .transition.compMapping.enter img:nth-child(2) {
  opacity: 1;
  transition: opacity 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }

:host([scrollingTop]) .transition.compMapping.exit img:nth-child(1) {
  opacity: 0;
  transform: translate(0px, 60px);
  transition: transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) 0s, opacity 1s cubic-bezier(0.42, 0, 0.58, 1) 0s;
  transition: all 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s; }

:host([scrollingTop]) .transition.compMapping.exit img:nth-child(2) {
  opacity: 0;
  transition: opacity 1.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0.3s; }

/*--colors--*/
/*--opacity--*/
/*--D--*/
/*--A--*/
/*--B--*/
/*--Error--*/
@media (pointer: fine) {
  .parallax-container {
    height: 100vh;
    overflow-x: hidden;
    -webkit-perspective: 1px;
    perspective: 1px; } }

/*--colors--*/
/*--opacity--*/
/*--D--*/
/*--A--*/
/*--B--*/
/*--Error--*/
/*--colors--*/
/*--opacity--*/
/*--D--*/
/*--A--*/
/*--B--*/
/*--Error--*/
@media (pointer: fine) {
  .parallax-container {
    height: 100vh;
    overflow-x: hidden;
    -webkit-perspective: 1px;
    perspective: 1px; } }

/*@function clean-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function font-space($font-size, $leading) {
  $text-body-height:72;
  $top-space-big-font:10;
  $top-space-small-font:5;

  $text-size-base: 100; //Default Size For mesurment
  $letter-height-base: $text-body-height;
  $line-height-base: 100; //Default Size For mesurment
  $top-space: if($font-size <= 18, $top-space-small-font, $top-space-big-font);
  $white-space-base-px: $line-height-base - $letter-height-base;

  $letter-size-px: round(clean-unit($font-size) / $text-size-base * $letter-height-base); //px
  $one-pers-lh: $leading / 100; //%
  $white-space: 100 - $letter-size-px / $one-pers-lh;
  $white-space-one-pers: ($white-space * $one-pers-lh) / 100; // 1%
  $t: $top-space / ($white-space-base-px / 100);
  $b: ($white-space-base-px - $top-space) / ($white-space-base-px / 100);
  $space-top-px: round($t * $white-space-one-pers);
  $space-bottom-px: round($b * $white-space-one-pers);

  $result-top: ($space-top-px + $letter-size-px) * 1px;
  @while ($result-top % clean-unit(var(--subdiv)) != 0) {
    $result-top: $result-top + 1
  }

  $result-bottom: $space-bottom-px * 1px;
  @while ($result-bottom % clean-unit(var(--subdiv)) != 0) {
    $result-bottom: $result-bottom + 1
  }

  @return $result-top - ($space-top-px + $letter-size-px) 0px ($result-bottom - $space-bottom-px) 0px;

}*/
/*@function line-height($f-size, $Leading) {
  @return round(($f-size * $Leading)/$subdiv)*$subdiv;
}*/
/*@function clean-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function font-space($font-size, $leading) {
  $text-body-height:72;
  $top-space-big-font:10;
  $top-space-small-font:5;

  $text-size-base: 100; //Default Size For mesurment
  $letter-height-base: $text-body-height;
  $line-height-base: 100; //Default Size For mesurment
  $top-space: if($font-size <= 18, $top-space-small-font, $top-space-big-font);
  $white-space-base-px: $line-height-base - $letter-height-base;

  $letter-size-px: round(clean-unit($font-size) / $text-size-base * $letter-height-base); //px
  $one-pers-lh: $leading / 100; //%
  $white-space: 100 - $letter-size-px / $one-pers-lh;
  $white-space-one-pers: ($white-space * $one-pers-lh) / 100; // 1%
  $t: $top-space / ($white-space-base-px / 100);
  $b: ($white-space-base-px - $top-space) / ($white-space-base-px / 100);
  $space-top-px: round($t * $white-space-one-pers);
  $space-bottom-px: round($b * $white-space-one-pers);

  $result-top: ($space-top-px + $letter-size-px) * 1px;
  @while ($result-top % clean-unit(var(--subdiv)) != 0) {
    $result-top: $result-top + 1
  }

  $result-bottom: $space-bottom-px * 1px;
  @while ($result-bottom % clean-unit(var(--subdiv)) != 0) {
    $result-bottom: $result-bottom + 1
  }

  @return $result-top - ($space-top-px + $letter-size-px) 0px ($result-bottom - $space-bottom-px) 0px;

}*/
/*@function line-height($f-size, $Leading) {
  @return round(($f-size * $Leading)/$subdiv)*$subdiv;
}*/
/*--colors--*/
/*--opacity--*/
/*--D--*/
/*--A--*/
/*--B--*/
/*--Error--*/
.title1 {
  font: 300 var(--font-size8)/1.2 lato, sans-serif, open-sans;
  letter-spacing: 0.053em;
  text-transform: none;
  margin-bottom: calc(var(--subdiv) * 7);
  text-align: center; }

.cta-text {
  font: 300 var(--font-size2)/1.2 lato, sans-serif, open-sans;
  letter-spacing: 0.25em;
  text-transform: uppercase; }

.title2, h3, [tip]:before {
  font: 300 var(--font-size2)/1.25 Lato, sans-serif, open-sans;
  letter-spacing: 0.33em;
  text-transform: uppercase;
  margin-bottom: calc(var(--subdiv) * 4); }

.title3 {
  font: 300 var(--font-size7)/1.5 Lato, sans-serif, open-sans;
  letter-spacing: 0.03em;
  text-transform: none;
  margin-bottom: var(--baseline); }

.title4 {
  font: 300 var(--font-size5)/1.4 Lato, sans-serif, open-sans;
  letter-spacing: 0.03em;
  text-transform: none;
  margin-bottom: calc(var(--subdiv) * 7); }

.subtitle1 {
  font: 300 var(--font-size2)/1.8 Lato, sans-serif, open-sans;
  letter-spacing: 0.21em;
  text-transform: uppercase;
  color: #fff;
  text-align: center;
  margin-bottom: 0; }

.subtitle2 {
  font: 300 var(--font-size4)/1.6 lato, sans-serif, open-sans;
  letter-spacing: 0em;
  text-transform: none; }

p {
  font: 300 var(--font-size3)/1.66 Lato, sans-serif, open-sans;
  letter-spacing: 0.02em;
  text-transform: none;
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: auto;
  hyphens: auto;
  -webkit-hyphens: auto; }

p.emph-text {
  font: 300 var(--font-size5)/1.6 lato, sans-serif, open-sans;
  letter-spacing: 0em;
  text-transform: none;
  margin-bottom: calc(var(--baseline) * 2); }
  p.emph-text b {
    font: 500 var(--font-size5)/1.6 lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none; }

h3 {
  margin-bottom: var(--spacer2);
  text-align: center; }

@media only screen and (max-width: 450px) and (min-width: 0px) {
  .subtitle1 {
    font: 300 var(--font-size2)/1.8 Lato, sans-serif, open-sans;
    letter-spacing: 0.21em;
    text-transform: uppercase; }
  .subtitle2 {
    font: 300 var(--font-size3)/1.66 lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none;
    text-align: left; }
  p {
    font: 300 var(--font-size3)/1.5 Lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none; }
  p.emph-text {
    font: 300 var(--font-size3)/1.6 Lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none; }
    p.emph-text b {
      font: 400 var(--font-size3)/1.6 Lato, sans-serif, open-sans;
      letter-spacing: 0em;
      text-transform: none; }
  .title1 {
    font: 300 var(--font-size6)/1.25 Lato, sans-serif, open-sans;
    letter-spacing: 0.02em;
    text-transform: none;
    margin-bottom: calc(var(--subdiv) * 2);
    text-align: center !important; }
  .title2, h3, [tip]:before {
    font: 300 var(--font-size1)/1.25 Lato, sans-serif, open-sans;
    letter-spacing: 0.63em;
    text-transform: uppercase;
    text-align: center; }
  .title3 {
    font: 300 var(--font-size6)/1.5 Lato, sans-serif, open-sans;
    letter-spacing: 0.03em;
    text-transform: none;
    margin-bottom: var(--baseline); }
  .title4 {
    font: 400 var(--font-size4)/1.4 Lato, sans-serif, open-sans;
    letter-spacing: 0.03em;
    text-transform: none;
    margin-bottom: calc(var(--subdiv) * 6); } }

:host {
  display: block;
  position: relative;
  font-smoothing: antialiased;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }
  :host nav-link {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    -webkit-tap-highlight-color: transparent; }
  :host :hover, :host :focus, :host :active {
    outline: none;
    text-decoration: none;
    border-style: none; }
  :host img {
    box-sizing: border-box; }
  :host ::-webkit-input-placeholder {
    color: #a1a0a2; }
  :host ::-moz-placeholder {
    color: #a1a0a2; }
  :host :-ms-input-placeholder {
    color: #a1a0a2; }
  :host :-moz-placeholder {
    color: #a1a0a2; }
  :host ul {
    padding: 0; }
  :host input, :host textarea, :host fieldset {
    border: 0;
    outline: none;
    resize: none;
    -ms-overflow-style: none; }
  :host a, :host b, :host p, :host h1, :host h2, :host h3, :host h4, :host h5, :host h6, :host ul, :host span, :host nav-link {
    cursor: auto;
    color: #131116;
    text-rendering: optimizeLegibility; }
  :host a, :host li, :host span {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }
  :host img {
    -webkit-touch-callout: none;
    /* iOS Safari */
    -webkit-user-select: none;
    /* Safari */
    -khtml-user-select: none;
    /* Konqueror HTML */
    -moz-user-select: none;
    /* Firefox */
    -ms-user-select: none;
    /* Internet Explorer/Edge */
    user-select: none;
    /* Non-prefixed version, currently                               supported by Chrome and Opera */ }
  :host a, :host a:visited, :host a:focus, :host a:active, :host a:hover {
    text-decoration: none;
    cursor: pointer; }
  :host li {
    list-style-type: none; }

[tip] {
  position: relative; }

[tip]:before {
  content: attr(data-description);
  visibility: hidden;
  background: transparent;
  color: #fff;
  z-index: 99;
  white-space: pre;
  line-height: 25px;
  border-radius: 0;
  opacity: 0;
  transition: 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
  padding: 5.4px;
  position: absolute;
  text-transform: uppercase; }

[tip]:hover:before {
  opacity: 1;
  visibility: visible;
  transition: 0.3s cubic-bezier(0.645, 0.045, 0.355, 1) 0.3s; }

[tip=top]:before, [tip]:before {
  top: -17px;
  left: 50%;
  transform: translate(-50%, -100%); }

[tip=bottom]:before {
  bottom: -17px;
  left: 50%;
  top: unset;
  transform: translate(-50%, 100%); }

[tip=left]:before {
  top: 50%;
  left: -17px;
  transform: translate(-100%, -50%); }

[tip=right]:before {
  right: -17px;
  left: unset;
  top: 50%;
  transform: translate(100%, -50%); }

[tip]:after {
  content: '';
  visibility: hidden;
  position: absolute;
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-top: 6px solid transparent;
  margin-left: -6px;
  height: 0;
  width: 0;
  transition: 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
  opacity: 0; }

[tip]:hover:after {
  opacity: 1;
  visibility: visible;
  transition: 0.3s cubic-bezier(0.645, 0.045, 0.355, 1) 0.3s; }

[tip=top]:after, [tip]:after {
  top: -17px;
  left: 50%;
  transform: translate(0, 0); }

[tip=left]:after {
  top: 50%;
  left: -17px;
  transform: rotate(-90deg) translate(25%, 3px); }

[tip=right]:after {
  left: unset;
  right: -17px;
  top: 50%;
  transform: rotate(90deg) translate(-25%, -4px); }

[tip=bottom]:after {
  top: unset;
  bottom: -17px;
  left: 50%;
  transform: rotate(180deg) translate(0, 0); }

[data-description=""]:hover:after, [data-description=""]:hover:before {
  visibility: hidden; }

/*@function clean-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function font-space($font-size, $leading) {
  $text-body-height:72;
  $top-space-big-font:10;
  $top-space-small-font:5;

  $text-size-base: 100; //Default Size For mesurment
  $letter-height-base: $text-body-height;
  $line-height-base: 100; //Default Size For mesurment
  $top-space: if($font-size <= 18, $top-space-small-font, $top-space-big-font);
  $white-space-base-px: $line-height-base - $letter-height-base;

  $letter-size-px: round(clean-unit($font-size) / $text-size-base * $letter-height-base); //px
  $one-pers-lh: $leading / 100; //%
  $white-space: 100 - $letter-size-px / $one-pers-lh;
  $white-space-one-pers: ($white-space * $one-pers-lh) / 100; // 1%
  $t: $top-space / ($white-space-base-px / 100);
  $b: ($white-space-base-px - $top-space) / ($white-space-base-px / 100);
  $space-top-px: round($t * $white-space-one-pers);
  $space-bottom-px: round($b * $white-space-one-pers);

  $result-top: ($space-top-px + $letter-size-px) * 1px;
  @while ($result-top % clean-unit(var(--subdiv)) != 0) {
    $result-top: $result-top + 1
  }

  $result-bottom: $space-bottom-px * 1px;
  @while ($result-bottom % clean-unit(var(--subdiv)) != 0) {
    $result-bottom: $result-bottom + 1
  }

  @return $result-top - ($space-top-px + $letter-size-px) 0px ($result-bottom - $space-bottom-px) 0px;

}*/
/*@function line-height($f-size, $Leading) {
  @return round(($f-size * $Leading)/$subdiv)*$subdiv;
}*/
/*@function clean-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function font-space($font-size, $leading) {
  $text-body-height:72;
  $top-space-big-font:10;
  $top-space-small-font:5;

  $text-size-base: 100; //Default Size For mesurment
  $letter-height-base: $text-body-height;
  $line-height-base: 100; //Default Size For mesurment
  $top-space: if($font-size <= 18, $top-space-small-font, $top-space-big-font);
  $white-space-base-px: $line-height-base - $letter-height-base;

  $letter-size-px: round(clean-unit($font-size) / $text-size-base * $letter-height-base); //px
  $one-pers-lh: $leading / 100; //%
  $white-space: 100 - $letter-size-px / $one-pers-lh;
  $white-space-one-pers: ($white-space * $one-pers-lh) / 100; // 1%
  $t: $top-space / ($white-space-base-px / 100);
  $b: ($white-space-base-px - $top-space) / ($white-space-base-px / 100);
  $space-top-px: round($t * $white-space-one-pers);
  $space-bottom-px: round($b * $white-space-one-pers);

  $result-top: ($space-top-px + $letter-size-px) * 1px;
  @while ($result-top % clean-unit(var(--subdiv)) != 0) {
    $result-top: $result-top + 1
  }

  $result-bottom: $space-bottom-px * 1px;
  @while ($result-bottom % clean-unit(var(--subdiv)) != 0) {
    $result-bottom: $result-bottom + 1
  }

  @return $result-top - ($space-top-px + $letter-size-px) 0px ($result-bottom - $space-bottom-px) 0px;

}*/
/*@function line-height($f-size, $Leading) {
  @return round(($f-size * $Leading)/$subdiv)*$subdiv;
}*/
/*@function clean-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function font-space($font-size, $leading) {
  $text-body-height:72;
  $top-space-big-font:10;
  $top-space-small-font:5;

  $text-size-base: 100; //Default Size For mesurment
  $letter-height-base: $text-body-height;
  $line-height-base: 100; //Default Size For mesurment
  $top-space: if($font-size <= 18, $top-space-small-font, $top-space-big-font);
  $white-space-base-px: $line-height-base - $letter-height-base;

  $letter-size-px: round(clean-unit($font-size) / $text-size-base * $letter-height-base); //px
  $one-pers-lh: $leading / 100; //%
  $white-space: 100 - $letter-size-px / $one-pers-lh;
  $white-space-one-pers: ($white-space * $one-pers-lh) / 100; // 1%
  $t: $top-space / ($white-space-base-px / 100);
  $b: ($white-space-base-px - $top-space) / ($white-space-base-px / 100);
  $space-top-px: round($t * $white-space-one-pers);
  $space-bottom-px: round($b * $white-space-one-pers);

  $result-top: ($space-top-px + $letter-size-px) * 1px;
  @while ($result-top % clean-unit(var(--subdiv)) != 0) {
    $result-top: $result-top + 1
  }

  $result-bottom: $space-bottom-px * 1px;
  @while ($result-bottom % clean-unit(var(--subdiv)) != 0) {
    $result-bottom: $result-bottom + 1
  }

  @return $result-top - ($space-top-px + $letter-size-px) 0px ($result-bottom - $space-bottom-px) 0px;

}*/
/*@function line-height($f-size, $Leading) {
  @return round(($f-size * $Leading)/$subdiv)*$subdiv;
}*/
/*--colors--*/
/*--opacity--*/
/*--D--*/
/*--A--*/
/*--B--*/
/*--Error--*/
.title1 {
  font: 300 var(--font-size8)/1.2 lato, sans-serif, open-sans;
  letter-spacing: 0.053em;
  text-transform: none;
  margin-bottom: calc(var(--subdiv) * 7);
  text-align: center; }

.cta-text {
  font: 300 var(--font-size2)/1.2 lato, sans-serif, open-sans;
  letter-spacing: 0.25em;
  text-transform: uppercase; }

.title2, h3, [tip]:before {
  font: 300 var(--font-size2)/1.25 Lato, sans-serif, open-sans;
  letter-spacing: 0.33em;
  text-transform: uppercase;
  margin-bottom: calc(var(--subdiv) * 4); }

.title3 {
  font: 300 var(--font-size7)/1.5 Lato, sans-serif, open-sans;
  letter-spacing: 0.03em;
  text-transform: none;
  margin-bottom: var(--baseline); }

.title4 {
  font: 300 var(--font-size5)/1.4 Lato, sans-serif, open-sans;
  letter-spacing: 0.03em;
  text-transform: none;
  margin-bottom: calc(var(--subdiv) * 7); }

.subtitle1 {
  font: 300 var(--font-size2)/1.8 Lato, sans-serif, open-sans;
  letter-spacing: 0.21em;
  text-transform: uppercase;
  color: #fff;
  text-align: center;
  margin-bottom: 0; }

.subtitle2 {
  font: 300 var(--font-size4)/1.6 lato, sans-serif, open-sans;
  letter-spacing: 0em;
  text-transform: none; }

p {
  font: 300 var(--font-size3)/1.66 Lato, sans-serif, open-sans;
  letter-spacing: 0.02em;
  text-transform: none;
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: auto;
  hyphens: auto;
  -webkit-hyphens: auto; }

p.emph-text {
  font: 300 var(--font-size5)/1.6 lato, sans-serif, open-sans;
  letter-spacing: 0em;
  text-transform: none;
  margin-bottom: calc(var(--baseline) * 2); }
  p.emph-text b {
    font: 500 var(--font-size5)/1.6 lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none; }

h3 {
  margin-bottom: var(--spacer2);
  text-align: center; }

@media only screen and (max-width: 450px) and (min-width: 0px) {
  .subtitle1 {
    font: 300 var(--font-size2)/1.8 Lato, sans-serif, open-sans;
    letter-spacing: 0.21em;
    text-transform: uppercase; }
  .subtitle2 {
    font: 300 var(--font-size3)/1.66 lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none;
    text-align: left; }
  p {
    font: 300 var(--font-size3)/1.5 Lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none; }
  p.emph-text {
    font: 300 var(--font-size3)/1.6 Lato, sans-serif, open-sans;
    letter-spacing: 0em;
    text-transform: none; }
    p.emph-text b {
      font: 400 var(--font-size3)/1.6 Lato, sans-serif, open-sans;
      letter-spacing: 0em;
      text-transform: none; }
  .title1 {
    font: 300 var(--font-size6)/1.25 Lato, sans-serif, open-sans;
    letter-spacing: 0.02em;
    text-transform: none;
    margin-bottom: calc(var(--subdiv) * 2);
    text-align: center !important; }
  .title2, h3, [tip]:before {
    font: 300 var(--font-size1)/1.25 Lato, sans-serif, open-sans;
    letter-spacing: 0.63em;
    text-transform: uppercase;
    text-align: center; }
  .title3 {
    font: 300 var(--font-size6)/1.5 Lato, sans-serif, open-sans;
    letter-spacing: 0.03em;
    text-transform: none;
    margin-bottom: var(--baseline); }
  .title4 {
    font: 400 var(--font-size4)/1.4 Lato, sans-serif, open-sans;
    letter-spacing: 0.03em;
    text-transform: none;
    margin-bottom: calc(var(--subdiv) * 6); } }

body {
  --font-ratio: 1.25;
  --font-size2: calc(var(--font-base) / var(--font-ratio));
  --font-size1: calc(var(--font-size2) / var(--font-ratio));
  --font-size3: var(--font-base);
  --font-size4: calc(var(--font-size3) * var(--font-ratio));
  --font-size5: calc(var(--font-size4) * var(--font-ratio));
  --font-size6: calc(var(--font-size5) * var(--font-ratio));
  --font-size7: calc(var(--font-size6) * var(--font-ratio));
  --font-size8: calc(var(--font-size7) * var(--font-ratio));
  --font-size9: calc(var(--font-size8) * var(--font-ratio));
  --font-size10: calc(var(--font-size9) * var(--font-ratio));
  --font-size11: calc(var(--font-size10) * var(--font-ratio));
  --font-size12: calc(var(--font-size11) * var(--font-ratio));
  --font-size13: calc(var(--font-size12) * var(--font-ratio));
  --font-size14: calc(var(--font-size13) * var(--font-ratio));
  --font-base: 18px;
  --baseline: calc(var(--font-base) * 1.66);
  --subdiv: calc(var(--baseline) / 5);
  --column-width: calc(var(--subdiv) * 10);
  --gutter: calc(var(--subdiv) * 5);
  --content-width: calc(var(--column-width) * 12 + (var(--gutter) * (12 + 1)));
  --column-width-percents: calc(var(--column-width) / (var(--content-width) / 100%));
  --gutter-percents: calc(var(--gutter) / (var(--content-width) / 100%));
  --column1: var(--column-width);
  --column2: calc(var(--column-width) * 2 + var(--gutter));
  --column3: calc(var(--column-width) * 3 + var(--gutter) * 2);
  --column4: calc(var(--column-width) * 4 + var(--gutter) * 3);
  --column5: calc(var(--column-width) * 5 + var(--gutter) * 4);
  --column6: calc(var(--column-width) * 6 + var(--gutter) * 5);
  --column7: calc(var(--column-width) * 7 + var(--gutter) * 6);
  --column8: calc(var(--column-width) * 8 + var(--gutter) * 7);
  --column9: calc(var(--column-width) * 9 + var(--gutter) * 8);
  --column10: calc(var(--column-width) * 10 + var(--gutter) * 9);
  --column11: calc(var(--column-width) * 11 + var(--gutter) * 10);
  --column12: calc(var(--column-width) * 12 + var(--gutter) * 11);
  --h-division1: calc(var(--baseline) * 3);
  --h-division2: calc(var(--h-division1) * 2 + var(--baseline));
  --h-division3: calc(var(--h-division1) * 3 + var(--baseline) * 2);
  --h-division4: calc(var(--h-division1) * 4 + var(--baseline) * 3);
  --h-division5: calc(var(--h-division1) * 5 + var(--baseline) * 4);
  --h-division6: calc(var(--h-division1) * 6 + var(--baseline) * 5);
  --spacer1: var(--baseline);
  --spacer2: calc(var(--baseline) * 2);
  --spacer3: calc(var(--baseline) * 3);
  --spacer4: calc(var(--baseline) * 4);
  --spacer5: calc(var(--baseline) * 5);
  --spacer6: calc(var(--baseline) * 6);
  --nav-circle-size: 6px;
  --side-margins: calc(var(--gutter) * 2);
  --top-bar: calc(var(--baseline) * 3);
  --illustration-size: var(--column4);
  --work-margin-top-section: calc(var(--spacer2) - var(--subdiv));
  --work-margin-bottom-section: var(--spacer2);
  --work-cont-wrap-width: var(--column11);
  --work-white-spase: calc(var(--baseline) * 1.5);
  --work-content-side-margins: var(--gutter);
  --space-primary-section: var(--spacer4);
  --space-sub-section: var(--spacer3); }

@-moz-document url-prefix() {
  body {
    --font-size1: 11px;
    --font-size2: 14px;
    --font-size3: 18px;
    --font-size4: 23px;
    --font-size5: 29px;
    --font-size6: 36px;
    --font-size7: 45px;
    --font-size8: 56px;
    --font-size9: 70px;
    --font-size10: 88px;
    --font-size11: 110px;
    --font-size12: 138px;
    --font-size13: 173px;
    --font-size14: 216px; } }
  @media screen and (max-width: 450px) {
    body {
      --side-margins: calc(var(--subdiv) * 4);
      --spacer2: calc(var(--baseline) * 1.5);
      --spacer3: calc(var(--baseline) * 2);
      --spacer4: calc(var(--baseline) * 3);
      --spacer5: calc(var(--baseline) * 4); } }
  @media screen and (max-width: 1500px) {
    body {
      --side-margins: calc(var(--gutter) * 1.5); } }
  @media only screen and (max-width: 3000px) and (min-width: 1920px) {
    body {
      --font-base: 20px;
      --baseline: calc(var(--font-base) * 1.75);
      --subdiv: calc(var(--baseline) / 5); } }

::-webkit-scrollbar {
  width: 0;
  -webkit-appearance: none; }

*::selection {
  background-color: #131116;
  color: #fff; }

html {
  height: 100%; }

body {
  margin: 0;
  padding: 0;
  border: 0;
  outline: none;
  background: none; }

body {
  min-height: 100%; }

theglyph-app {
  display: block; }
