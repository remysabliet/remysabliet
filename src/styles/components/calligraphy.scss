$japanese-gride-template-area: 'g0 f0 e0 d0 c0 b0 a0'
  'g1 f1 e1 d1 c1 b1 a1' 'g2 f2 e2 d2 c2 b2 a2'
  'g3 f3 e3 d3 c3 b3 a3' 'g4 f4 e4 d4 c4 b4 a4'
  'g5 f5 e5 d5 c5 b5 a5' 'g6 f6 e6 d6 c6 b6 a6'
  'g7 f7 e7 d7 c7 b7 a7' 'g8 f8 e8 d8 c8 b8 a8'
  'g9 f9 e9 d9 c9 b9 a9'
  'g10 f10 e10 d10 c10 b10 a10'
  'g11 f11 e11 d11 c11 b11 a11';

// $english-gride-template-area:
// 'a0 f0 e0 d0 c0 b0 a0'
// 'g1 f1 e1 d1 c1 b1 a1'
// 'g2 f2 e2 d2 c2 b2 a2'
// 'g3 f3 e3 d3 c3 b3 a3'
// 'g4 f4 e4 d4 c4 b4 a4'
// 'g5 f5 e5 d5 c5 b5 a5'
// 'g6 f6 e6 d6 c6 b6 a6'
// 'g7 f7 e7 d7 c7 b7 a7'
// 'g8 f8 e8 d8 c8 b8 a8'
// 'g9 f9 e9 d9 c9 b9 a9'
// 'g10 f10 e10 d10 c10 b10 a10'
// 'g11 f11 e11 d11 c11 b11 a11';

.rs-calligraphy-container-kanji {
  @include grid-container(
    10px,
    $japanese-gride-template-area
  );
}

.rs-calligraphy-container-alphabet {
  @include flexbox();
  @include flex-direction(column);
  height: 100%;
  width: 100%;

  .rs-calligraphy-container-en-row {
    @include flexbox();
    @include flex-direction(row);
    @include justify-content(flex-start);
    @include flex-grow(1);
    height: calc(
      var(--calligraphy-row-height) * 1vh
    );

    .rs-calligraphy-item {
      //We must precise an width to prevent SCG block not to spread on the whole Width (this include Edge Beta)
      height: calc(
        var(--calligraphy-row-height) * 1vh
      );

    //   width: 5vw;
    //   // width: calc(
    //   //   var(--calligraphy-row-height) * 1vh
    //   // );
    // }
  }
}
}

// https://lisilinhart.info/posts/css-grid-sass/

$grid-column-count: 7;
$grid-row-count: 12;
$grid-calligraphy-count: 12;

@for $i from 0 to $grid-calligraphy-count {
  .grid-item-a#{$i} {
    grid-area: a#{$i};
    @extend %grid-item-size;
  }
}

@for $i from 0 to $grid-calligraphy-count {
  .grid-item-b#{$i} {
    grid-area: b#{$i};
    @extend %grid-item-size;
  }
}

@for $i from 0 to $grid-calligraphy-count {
  .grid-item-c#{$i} {
    grid-area: c#{$i};
    @extend %grid-item-size;
  }
}

@for $i from 0 to $grid-calligraphy-count {
  .grid-item-d#{$i} {
    grid-area: d#{$i};
    @extend %grid-item-size;
  }
}

@for $i from 0 to $grid-calligraphy-count {
  .grid-item-e#{$i} {
    grid-area: e#{$i};
    @extend %grid-item-size;
  }
}

@for $i from 0 to $grid-calligraphy-count {
  .grid-item-f#{$i} {
    grid-area: f#{$i};
    @extend %grid-item-size;
  }
}

@for $i from 0 to $grid-calligraphy-count {
  .grid-item-g#{$i} {
    grid-area: g#{$i};
    @extend %grid-item-size;
  }
}

@for $i from 0 to $grid-calligraphy-count {
  .grid-item-h#{$i} {
    grid-area: h#{$i};
    @extend %grid-item-size;
  }
}

@for $i from 0 to $grid-calligraphy-count {
  .grid-item-i#{$i} {
    grid-area: i#{$i};
    @extend %grid-item-size;
  }
}

@for $i from 0 to $grid-calligraphy-count {
  .grid-item-j#{$i} {
    grid-area: j#{$i};
    @extend %grid-item-size;
  }
}

svg.calligraphy {
  width: 100%;
  height: 100%;
  // will-change: transform, opacity;
  &.faded-out {
    opacity: 0;
  }
  //  &.anim-opacity-up {
  //    animation: opacity-up-anim 5s linear forwards !important;
  //  }

  g[clip-path] {
    stroke: #000;
    stroke-width: 19;
    stroke-dashoffset: 500;
    stroke-dasharray: 500;
  }

  path,
  polyline {
    fill: none;
  }

  .siblings {
    //will-change: opacity;
    animation: svg-stroke-move-anim 0.3s ease-in
      forwards;
    &.alphabet {
      animation: svg-stroke-move-anim 0.7s ease-in
        forwards;
    }

    &.faded-out {
      opacity: 0;
    }
  }
}
