@import "./includes/_colors";

@mixin ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin user-select($select) {
  -webkit-touch-callout: $select;
  -webkit-user-select: $select;
  -khtml-user-select: $select;
  -moz-user-select: $select;
  -ms-user-select: $select;
  user-select: $select;
}

@mixin animation($str) {
  -webkit-animation: $str;
  -moz-animation: $str;
  -ms-animation: $str;
  -o-animation: $str;
  animation: $str;
}

@mixin transform($style) {
  -webkit-transform: $style;
  -moz-transform: $style;
  -ms-transform: $style;
  -o-transform: $style;
  transform: $style;
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

/**
* return a grid layout based on grid-gap and template
*
*/
@mixin grid-container(
  $grid-gap,
  $grid-template-areas
) {
  display: grid;
  height: 100%;
  width: 100%;
  grid-gap: $grid-gap;
  grid-template-areas: $grid-template-areas;
}

/**
* Modify animation-delay incremently to a list of child
*/
@mixin delayed-draw($max) {
  $counter: 0.2;
  @for $var from 1 through ($max) {
    $counter: $counter + 0.2;
    &:nth-child(#{$var}) {
      animation-delay: #{$counter}s;
    }
  }
}

/**
* stop animation of current element and all sub-elements from where it
* is included
*/
@mixin pausing-anim() {
  &.js-pausing *,
  .js-pausing *::after {
    //
    animation-play-state: paused !important;
  }
}

/* Root element and its child inheritate the will-change property */
@mixin will-change-with-child {
  .js-will-change * {
    will-change: opacity, transform;
  }
}

@mixin background-green() {
  background-size: cover;
  background-repeat: repeat;
  background-position: center center;
  background: $background-color-green-black-fallback;
  background: $background-color-green-black-webkit;
  background: $background-color-green-black;
}

/**
* Border created from image
*/
@mixin border-image-marbre {
  border-style: outset; // We want the stile outside the div 
  border-image-slice: 32; //with for the image we are slicing - must be written without px
  border-image-width: 32px;//width for the div we decorate, must be written along px or %
  border-image-repeat: stretch round;
  border-image-outset: 25px; // make the border outside an element
  border-image-source: url("assets/img/marbe-small-inner-shadow.png");
}
